# -*- coding: utf-8 -*-
"""Copy of Data Analysis with Python : Project Showcase (20th Oct 2020)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WtoaAlGHwtFzr70s81q3gEltziTTllae

#Data Analysis with Python : Project Showcase (20th Oct 2020)

## <font color='#FFFFFF'>1. Defining the Research Problem</font>

### a) Background Information
<font color='#green' face='courier' size= 4>The Sports industry in Russia has seen an increase in profits for two leading sportswear
and athleisure brands brand (Nike and Adidas) for the past one year. This has led to the
emergence of premium sports startups such as Lublu, which would want to take
advantage of this opportunity and get a market share.<br> <p> 
As a Data Science Consultant working for Lublu, you have been tasked to perform
analysis on pricing, product and assortment of Adidas and Nike. You are then required to create a descriptive analysis report, making relevant observations and recommendations that will help Lublu in the launch of similar products.

</font> <br>

### b) Problem Statement
<font color='#green' face='courier' size= 4> Given the market intelligence data for Nike and Adidas brands, what would be the most appropriate ***Market Entry Strategy*** for Lublu?

</font> <br>

## <font color='#FFFFFF'>2. Data Importation, Exploration & Preparation</font>

### a) Data Importation
"""

# load the relevant libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# read data from csv files into dataframes using pandas

# nike data
nike_df = pd.read_csv('nike_2020_04_13.csv')

# adidas data. You will notice the extra argument in this reading to specify the delimiter used in the csv
adidas_df = pd.read_csv('adidas_final.csv', ';')

"""### b) Data Exploration

We do not have available glossary for the datasets *(apart from the fact that prices are in Russian Roubles)* and therefore thorough exploration is necessary to understand their structure.
"""

# get the column structure of the datasets.
# nike dataset

nike_df.info()

nike_df.shape

adidas_df.info()

adidas_df.shape

"""*From the above checks, we notice that;*
1. *Nike dataset has `643` rows and `12` columns while Adidas dataset had `2,625` rows and `12` columns.*
2. *Both datasets have the same number of columns, field names as well as the datatypes, save for the 'Rating' column which is int64 for adidas dataset and float64 for nike dataset. Additionally, the column indices of the matching column names are in the same order.* 
3. *Apart from the `Images` column of the Nike dataset, we do not have any other null entries in the datasets. These records with null values for the images can be comfortably included in our analysis as the column data does not really affect our analysis.*<br>

*We will then proceed to sample records from each of the dataset for a better view of the data.*
"""

# sampling nike dataset records
nike_df.head (4)

# sample a few records from adidas dataset
adidas_df.head(4)

# determine unique identifiers for datasets / brands. *to confirm this in class... ***
# nike_df.['Product ID'].value_counts()

"""### c) Data Preparation"""

# To avoid issues related with casing and spaces in column names, we replace the spaces with '_' in both datasets.
# and further convert all names to lowercase.

nike_df.columns = nike_df.columns.str.replace('\s+', '_').str.lower().str.strip()
adidas_df.columns = adidas_df.columns.str.replace('\s+', '_').str.lower().str.strip()

# determine unique identifiers for datasets / brands for ease of referencing particular records.

#nike dataset
nike_df.product_id.value_counts()

# using the brands feature of the Nike dataset
nike_df.brand.value_counts()

# performing the same exercise on the adidas dataset
adidas_df.product_id.value_counts()

# and now with the 'brands' column of adidas dataset
adidas_df.brand.value_counts()

"""*From the above data checking we notice that*
1. *We have some cases where the 'Product ID' of Nike are duplicated. and so would be ggod to check if these are duplicate records*
2. *The Nike dataset has only one brand name for all the products, i.e `Nike`.*
3. *We do not have any duplicated product IDs for adidas.*
4. *We have 3 different brands of adidas, i.e `CORE / NEO`, `ORIGINALS`, and `SPORT PERFORMANCE`.*
"""

# checking for duplicates in the Nike dataset.

nike_df.duplicated().any()

"""*An interesting observation is that we have different entries for the same Product ID but not necessarily duplicated entries in the dataset. How is this so?.... Integrity of the data in the dataset may be? but upon using a different tool to filter such records, we notice that the only difference between the similar records is the timestamp in the `Last Visited` column where the difference is in terms of milliseconds / seconds. We therefore resolve to drop this colum for improved integrity of our data.*"""

# drop the 'Last Visited' column for the datasets.

nike_df.drop(columns = ['last_visited'], inplace = True)
adidas_df.drop(columns = ['last_visited'], inplace = True)

# Recheck the duplication of product IDs in the nike dataset

#nike_df.duplicated().any()
#nike_df.duplicated().sum()
sum(nike_df.duplicated())

# perfect! we have a total of 88 duplicated records in the nike dataset which we proceed to drop.

nike_df = nike_df[~nike_df.duplicated()]

nike_df.shape

# given that the two datasets have the same structure, we can merge them to have a global dataset for ease of 
# downstream analysis.

merge_df = nike_df.append(adidas_df)
merge_df.shape

"""*The new dataset with all the nike and adidas data has a total of 3,180 records. This is as per our expectation given that the constituent datasets had 555 rows and 2,625 rows respectively.* 
<br>

*At this point we can be assured of clean data that will support our investigations further which we will write to a new .csv file*
"""

# save the merged dataset to a clean CSV file, and download the same for permanence. 
from google.colab import files

merge_df.to_csv('merged_data.csv', index = False)
files.download('merged_data.csv')

"""## <font color='#FFFFFF'>3. Data Analysis</font>

### 3.1 Univariate Analysis
"""

# get the summary statistics
nike_df.describe()

adidas_df.describe()

merge_df.describe()

# distribution of the different brads under review
sns.set(font_scale=0.9)

plt.figure(figsize = (10, 6))
merge_df.brand.value_counts().plot(kind = 'bar', rot = 0, color = ['red', 'green', 'blue', 'orange'])
plt.xlabel('Brand')
plt.ylabel('Quantity')
plt.title('Distribution of Brands')
plt.show()

# tabular information of the brand distribution above.

print('Tabular Brand Distibution: \n')
merge_df.brand.value_counts()

# the same could also be achieved using 'merge_df.groupby('brand').count()', 
# however, this gives a repetative count of every numeric column, grouped by the specified property.

"""*From the above it is evident that Adidas brand, with its three streams of adidas sports wear has wider variety of products than the competitor Nike. As a matter of fact, the least of these streams is higher than Nike products!*"""

# product rating information. This seeks to answer the question; Which is the highest rated product and which brand is it?

# nike records
nike_records = merge_df[merge_df.brand.isin(['Nike'])].sort_values(by='rating', ascending=0)
nike_records.head(90)

#this could also be achieved by sorting the records directly using the nike_df dataset.

# over 100 products have been rated 5.0 and therefore we will proceed to determine the distribution of the rating among various Nike products.

nike_records.rating.value_counts()

# a similar operation for Adidas shoes to determine popularity of the brand.

adidas_records = merge_df[~merge_df.brand.isin(['Nike'])].sort_values(by='rating', ascending=0)
adidas_records.head(90)

"""1. About 50% of Nike brand products were rated over 4.6, with half of these having been rated 5.0. 
2. No ratings for Adidas products were given and therefore incomplete data for this brand. (this is an assumption because all products were rated 0)
"""

# Adidas give's more descriptive product deescription part of which can be used to identify the product with gender. 
# we will try and investigate which products are popular in Russia, whether masculine or feminine products so as to advise Lublu accordingly.

#Feminine Adidas brand products
adidas_f_df = merge_df[~merge_df.brand.isin(['Nike'])]
adidas_f_df = adidas_f_df[adidas_f_df['product_name'].str.contains('Women')]


print('Count of Feminine Products: \n ')
adidas_f_df['product_name'].str.contains('Women').value_counts()

# we could proceed to give details of each and every type of such products product using 

adidas_f_df.product_name.value_counts()

# Adidas brand masculine products

adidas_m_df = merge_df[~merge_df.brand.isin(['Nike'])]
adidas_m_df = adidas_m_df[adidas_m_df['product_name'].str.contains('Men')]


print('Count of Masculine Products: \n ')
adidas_m_df['product_name'].str.contains('Men').value_counts()

# Adidas brand unisex products

adidas_u_df = merge_df[~merge_df.brand.isin(['Nike'])]
adidas_u_df = adidas_u_df[adidas_u_df['product_name'].str.contains('Unisex')]


print('Count of Unisex Products: \n ')
adidas_u_df['product_name'].str.contains('Unisex').value_counts()

"""*From the above analysis, we see men's products from adidas being more popular at 70% stocking than women's products.* 
*Unisex products account for only about 4% of the items*
"""

# How do the prices of the brands compare?

sort_df = merge_df.sort_values(by='sale_price', ascending=0)
sort_df.head(50)

"""*The lowest price from the data obtained is from the adidas collection and the highest cost is for a Nike. However, Adidas brand dominates the top 50 most expensive sportswear. The fact that Adidas have been sponsors of Soviet national olympic team in 1980 and in the later years could be a possible pointer.*"""

# We need to interrogate the price distribution for all brands with the help of a histogram

sns.distplot(merge_df['sale_price'], kde = False, color='blue', hist_kws={"range": [400, 37000]})
plt.xlabel("Sale Price", labelpad=14)
plt.ylabel("Frequency", labelpad=14)
plt.title("Histogram of Sale Price (in Russian Roubles)", fontsize=14, y=1.01) 
plt.show()

# annotations on the histogram
# kernel density estimation (KDE) is a non-parametric way to estimate the probability density function (PDF) of a random variable using Gaussian kernels.
# color - color to use for the bars
# hist_kws range to specify the range of values to plot in the histogram

# due to the varied pricing of these products we zoom in arund the mode price

sns.distplot(merge_df['sale_price'], kde = False, color='blue', hist_kws={"range": [2000, 6000]})
plt.xlabel("Sale Price", labelpad=14)
plt.ylabel("Frequency", labelpad=14)
plt.title("Histogram of Sale Price (in Russian Roubles)", fontsize=14, y=1.01) 
plt.show()

"""### 3.2 Bivariate Analysis"""

# let us investigate if there is any positive and significat corelation between the variables in each of the datasets.

# Nike dataset
plt.figure(figsize=(8,8))
sns.heatmap(nike_df.corr(), annot=True, fmt=".3f")
plt.show()

# adidas dataset

plt.figure(figsize=(8,8))
sns.heatmap(adidas_df.corr(), annot=True, fmt=".3f")
plt.show()

"""## <font color='#FFFFFF'>4. Summary of Findings</font>

1. *Adidas, with its three streams of adidas sports wear has wider variety of products than the competitor Nike. As a matter of fact, the least of these streams is higher than Nike products!*
2. *The lowest price from the data obtained is from the adidas collection and the highest cost is for a Nike. However, Adidas brand dominates the top 50 most expensive sportswear. The fact that Adidas have been sponsors of Soviet national olympic team in 1980 and in the later years could be a possible pointer.*
3.  *Nike does not offer any discounts on its products while Adidas offers generous packages of upto 60% of the sale price on selected sportswear.*
4. *Adidas products, though most popular in the market are not rated unlike Nike brand where over 75% of the products are rated 5.0*
5. *There are 40% more products of Adidas men's products than there are for women.*

## <font color='#FFFFFF'>5. Challenging your Solution</font>

1. *A study of market entry strategy can not be complete without having a view of customers response to the current market. It would help a great deal if we had a dataset with actual sales so that we are able to determine the popularity of each of the products in the study.*
2. *Our study noted that Adidas shoes were not rated. Rating helps in estimating the popularity of a product in the market, and can be used to improve the quality of products.*

<font size=2>*Acknowledgement* <br>
*The provided datasets were sourced from [Data World Adidas ](https://data.world/data-hut/product-data-from-adidas) and [Data World Nike](https://data.world/login?next=%2Fdata-hut%2Fproduct-data-from-nike%2Fworkspace%2Ffile%3Ffilename%3Dnike_2020_04_13.csv).* </font>
"""